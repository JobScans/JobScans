import type { JobAnalysisResult } from "@shared/schema";

export class ExportUtils {
  static generatePDFReport(scan: JobAnalysisResult): string {
    // Generate HTML content for PDF conversion
    return `
<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>JobShield Analysis Report - ${scan.jobTitle}</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', sans-serif; margin: 40px; color: #333; }
        .header { text-align: center; margin-bottom: 30px; border-bottom: 2px solid #e5e7eb; padding-bottom: 20px; }
        .risk-badge { padding: 8px 16px; border-radius: 20px; font-weight: bold; display: inline-block; }
        .risk-high { background: #fecaca; color: #dc2626; }
        .risk-medium { background: #fed7aa; color: #ea580c; }
        .risk-low { background: #dcfce7; color: #16a34a; }
        .section { margin: 30px 0; }
        .red-flag { background: #fef2f2; border-left: 4px solid #ef4444; padding: 15px; margin: 10px 0; }
        .red-flag.high { border-color: #dc2626; }
        .red-flag.medium { border-color: #f59e0b; }
        .red-flag.low { border-color: #10b981; }
        .summary { background: #f8fafc; padding: 20px; border-radius: 8px; }
        .footer { text-align: center; color: #6b7280; margin-top: 40px; font-size: 12px; }
    </style>
</head>
<body>
    <div class="header">
        <h1>JobShield Analysis Report</h1>
        <h2>${scan.jobTitle} at ${scan.company}</h2>
        <div class="risk-badge risk-${scan.ghostLikelihoodScore >= 70 ? 'high' : scan.ghostLikelihoodScore >= 30 ? 'medium' : 'low'}">
            ${scan.ghostLikelihoodScore}% Ghost Job Risk - ${scan.ghostLikelihoodLevel.toUpperCase()}
        </div>
    </div>

    <div class="section">
        <h3>AI Summary</h3>
        <div class="summary">
            <p>${scan.aiSummary}</p>
        </div>
    </div>

    ${scan.redFlags.length > 0 ? `
    <div class="section">
        <h3>Red Flags Detected (${scan.redFlags.length})</h3>
        ${scan.redFlags.map(flag => `
            <div class="red-flag ${flag.severity}">
                <strong>${flag.flag}</strong>
                <p>${flag.explanation}</p>
            </div>
        `).join('')}
    </div>
    ` : '<div class="section"><h3>No significant red flags detected</h3></div>'}

    <div class="section">
        <h3>Confidence Explanation</h3>
        <p>${scan.confidenceExplanation || 'Analysis completed with standard confidence metrics.'}</p>
    </div>

    <div class="footer">
        <p>Report generated by JobShield on ${new Date().toLocaleDateString()}</p>
        <p>This analysis is for informational purposes only. Always conduct your own research.</p>
    </div>
</body>
</html>`;
  }

  static downloadHTMLReport(scan: JobAnalysisResult): void {
    const htmlContent = this.generatePDFReport(scan);
    const blob = new Blob([htmlContent], { type: 'text/html' });
    const url = URL.createObjectURL(blob);
    
    const link = document.createElement('a');
    link.href = url;
    link.download = `jobshield-analysis-${scan.company.replace(/[^a-z0-9]/gi, '-').toLowerCase()}-${Date.now()}.html`;
    document.body.appendChild(link);
    link.click();
    document.body.removeChild(link);
    
    URL.revokeObjectURL(url);
  }

  static copyReportAsText(scan: JobAnalysisResult): string {
    const riskLevel = scan.ghostLikelihoodScore >= 70 ? 'HIGH' : scan.ghostLikelihoodScore >= 30 ? 'MEDIUM' : 'LOW';
    
    return `
JOBSHIELD ANALYSIS REPORT
========================

Position: ${scan.jobTitle}
Company: ${scan.company}
Ghost Job Risk: ${scan.ghostLikelihoodScore}% (${riskLevel})
Analyzed: ${new Date().toLocaleDateString()}

AI SUMMARY:
${scan.aiSummary}

RED FLAGS (${scan.redFlags.length} detected):
${scan.redFlags.length === 0 ? 'No significant red flags detected' : 
  scan.redFlags.map((flag, i) => `${i + 1}. ${flag.flag} (${flag.severity.toUpperCase()})\n   ${flag.explanation}`).join('\n\n')}

CONFIDENCE EXPLANATION:
${scan.confidenceExplanation || 'Analysis completed with standard confidence metrics.'}

---
Generated by JobShield - AI-powered job posting analysis
This analysis is for informational purposes only.
`.trim();
  }

  static generateBrowserExtensionCode(): string {
    // Generate basic browser extension manifest and content script
    return `
// manifest.json
{
  "manifest_version": 3,
  "name": "JobShield Quick Scanner",
  "version": "1.0",
  "description": "Instantly analyze job postings for ghost job indicators",
  "permissions": ["activeTab"],
  "content_scripts": [{
    "matches": ["*://linkedin.com/jobs/*", "*://indeed.com/viewjob*", "*://glassdoor.com/job-listing/*"],
    "js": ["content.js"]
  }],
  "action": {
    "default_popup": "popup.html"
  }
}

// content.js
(function() {
  const button = document.createElement('button');
  button.textContent = '🔍 Scan with JobScans';
  button.style.cssText = 'position: fixed; top: 20px; right: 20px; z-index: 10000; background: #5d6b63; color: white; border: none; padding: 10px 15px; border-radius: 5px; cursor: pointer; font-size: 14px;';
  
  button.onclick = () => {
    const jobData = extractJobData();
    if (jobData) {
      fetch('YOUR_JOBSCANS_URL/api/analyze-job', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ jobDescription: jobData })
      }).then(res => res.json()).then(result => {
        showQuickResult(result);
      });
    }
  };
  
  function extractJobData() {
    // Site-specific extraction logic here
    return document.querySelector('.job-description, .jobDescriptionText, [data-test="job-description"]')?.textContent;
  }
  
  function showQuickResult(result) {
    const modal = document.createElement('div');
    modal.innerHTML = \`
      <div style="position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); background: white; padding: 20px; border-radius: 10px; box-shadow: 0 4px 20px rgba(0,0,0,0.3); z-index: 10001; max-width: 400px;">
        <h3>JobScans Quick Analysis</h3>
        <p><strong>Ghost Risk:</strong> \${result.ghostLikelihoodScore}%</p>
        <p><strong>Risk Level:</strong> \${result.ghostLikelihoodLevel}</p>
        <p>\${result.aiSummary}</p>
        <button onclick="this.parentElement.parentElement.remove()" style="background: #dc2626; color: white; border: none; padding: 8px 16px; border-radius: 4px; cursor: pointer;">Close</button>
      </div>
    \`;
    document.body.appendChild(modal);
  }
  
  document.body.appendChild(button);
})();`;
  }
}